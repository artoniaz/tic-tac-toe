{"version":3,"sources":["comps/Score.js","comps/BoardElement.js","comps/Turn.js","comps/Board.js","comps/OpeningBoard.js","comps/EndBoard.js","comps/App.js","index.js"],"names":["Score","props","react_default","a","createElement","id","playerName","score","playerWin","aiWin","BoardElement","_props$data","data","choice","winningElementsIDs","winningID","length","filter","el","className","onClick","playerMove","Turn","turn","style","color","Board","state","winner","elements","taken","whoStart","Math","floor","random","_this","setState","e","Object","toConsumableArray","newValue","Number","target","aiMove","freeElements","randomElement","alert","endGame","chosenCounter","push","clearGame","end","clear","_this2","this","map","src_comps_BoardElement","key","src_comps_Turn","_this3","setTimeout","getScore","React","Component","OpeningBoard","submitName","preventDefault","getPlayerName","handleInput","value","noValidate","onSubmit","htmlFor","type","placeholder","onChange","charAt","toUpperCase","slice","EndBoard","App","gameEnd","name","comps_OpeningBoard","src_comps_Score","src_comps_Board","comps_EndBoard","ReactDOM","render","src_comps_App","document","getElementById"],"mappings":"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","file":"static/js/main.83f55b4f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport \"./Score.css\"\nimport { spawn } from 'child_process';\n\nconst Score = props => {\n        return (\n            <section id=\"score\">\n                <p>{props.playerName ? props.playerName : <span>podaj imiÄ™</span>}: {props.score.playerWin}</p>\n                <p>Komputer: {props.score.aiWin}</p>\n            </section>\n        )\n}\n\nexport default Score;","import React from \"react\";\nimport \"./BoardElement.css\";\n\nconst BoardElement = props => {\n    const { id, choice } = props.data;\n    const { winningElementsIDs } = props;\n    let winningID = [-2];\n\n\n    if (winningElementsIDs.length !== 0) {\n        winningID = winningElementsIDs.filter(el => el == id);\n    }\n\n    if (winningID[0] === id && choice === \"player\"){\n        return (\n            <div className=\"playerChoice playerWinning\">\n            </div>\n        )\n    } else if ( winningID[0] === id && choice === \"ai\"){\n        return (\n            <div className=\"aiChoice aiWinning\">\n            </div>\n        )\n    } else if (choice === \"player\") {\n        return (\n            <div className=\"playerChoice\">\n            </div>\n        )\n    } else if (choice === \"ai\") {\n        return (\n            <div className=\"aiChoice\">\n            </div>\n        )\n    } else {\n        return (\n            <div onClick={props.playerMove} id={id}>\n            </div>\n        )\n    }\n}\n\n    export default BoardElement;","import React from 'react';\nimport \"./Turn.css\";\n\nconst Turn = props => {\n\n    const { turn } = props;\n\n    if (turn === \"player\") {\n        return (\n            <p id=\"turn\" style={{color: \"green\"}}>{props.playerName}, TwÃ³j ruch ;)</p>\n        )\n    } else if (turn === \"ai\"){\n        return (\n            <p id=\"turn\" style={{color: \"red\"}}>Ruch komputera</p>\n        )\n    } else {\n        return (\n            <p id=\"turn\">&nbsp;</p>\n        )\n    }\n};\n\nexport default Turn;","import React from 'react';\nimport \"./Board.css\"\nimport BoardElement from \"./BoardElement\";\nimport Turn from \"./Turn\";\n\nclass Board extends React.Component {\n\n    state = {\n        turn: \"\",\n        winner: \"\",\n        winningElementsIDs: [],\n\n        elements: [\n            {\n                id: 0,\n                choice: \"\",\n                taken: false,\n            },\n            {\n                id: 1,\n                choice: \"\",\n                taken: false,\n            },\n            {\n                id: 2,\n                choice: \"\",\n                taken: false,\n            },\n            {\n                id: 3,\n                choice: \"\",\n                taken: false,\n            },\n            {\n                id: 4,\n                choice: \"\",\n                taken: false,\n            },\n            {\n                id: 5,\n                choice: \"\",\n                taken: false,\n            },\n            {\n                id: 6,\n                choice: \"\",\n                taken: false,\n            },\n            {\n                id: 7,\n                choice: \"\",\n                taken: false,\n            },\n            {\n                id: 8,\n                choice: \"\",\n                taken: false,\n            },\n        ]\n    }\n\n    whoStart = () => {\n        const randomNumber = Math.floor(Math.random() * 2);\n\n        if (randomNumber === 0) {\n            this.setState({\n                turn: \"player\",\n            })\n        } else {\n            this.setState({\n                turn: \"ai\",\n            })\n        }\n    }\n\n    playerMove = e => {\n        if (this.state.turn !== \"player\" || this.state.winner !== \"\") {\n            return;\n        }\n\n        const elements = [...this.state.elements];\n        const newValue = {\n            id: Number(e.target.id),\n            choice: \"player\",\n            taken: true,\n        }\n        elements[e.target.id] = newValue;\n\n        this.setState({\n            elements,\n            turn: \"ai\",\n        })\n    };\n\n    aiMove = () => {\n        const elements = [...this.state.elements];\n        const freeElements = elements.filter(el => el.taken === false);\n        const randomNumber = Math.floor(Math.random() * freeElements.length);\n        const randomElement = freeElements[randomNumber];\n\n        if (freeElements.length === 0) {\n            return alert(\"koniec gry, wszystkie pola zajÄ™te\")\n        }\n\n        const newValue = {\n            id: randomElement.id,\n            choice: \"ai\",\n            taken: true,\n        }\n\n        elements[randomElement.id] = newValue;\n\n        const aiMove = {\n            elements: elements,\n            turn: \"player\",\n        };\n        return aiMove;\n    }\n\n    endGame = () => {\n        const elements = this.state.elements;\n        let winner = \"\";\n        let winningElementsIDs = [];\n        const chosenCounter = elements.filter(el => el.choice !== \"\")\n\n\n        \n        if (elements[0].choice === elements[1].choice && elements[0].choice === elements[2].choice && elements[0].choice !== \"\") {\n            winner = elements[0].choice;\n            winningElementsIDs.push(elements[0].id, elements[1].id, elements[2].id);\n\n        } else if (elements[3].choice === elements[4].choice && elements[4].choice === elements[5].choice && elements[3].choice !== \"\") {\n            winner = elements[3].choice;\n            winningElementsIDs.push(elements[3].id, elements[4].id, elements[5].id);\n\n        } else if (elements[6].choice === elements[7].choice && elements[7].choice === elements[8].choice && elements[6].choice !== \"\") {\n            winner = elements[6].choice;\n            winningElementsIDs.push(elements[6].id, elements[7].id, elements[8].id);\n\n        } else if (elements[0].choice === elements[3].choice && elements[3].choice === elements[6].choice && elements[0].choice !== \"\") {\n            winner = elements[0].choice;\n            winningElementsIDs.push(elements[0].id, elements[3].id, elements[6].id);\n\n        } else if (elements[1].choice === elements[4].choice && elements[4].choice === elements[7].choice && elements[1].choice !== \"\") {\n            winner = elements[1].choice;\n            winningElementsIDs.push(elements[1].id, elements[4].id, elements[7].id);\n\n        } else if (elements[2].choice === elements[5].choice && elements[5].choice === elements[8].choice && elements[2].choice !== \"\") {\n            winner = elements[2].choice;\n            winningElementsIDs.push(elements[2].id, elements[5].id, elements[8].id);\n\n        } else if (elements[0].choice === elements[4].choice && elements[4].choice === elements[8].choice && elements[0].choice !== \"\") {\n            winner = elements[0].choice;\n            winningElementsIDs.push(elements[0].id, elements[4].id, elements[8].id);\n\n        } else if (elements[2].choice === elements[4].choice && elements[4].choice === elements[6].choice && elements[2].choice !== \"\") {\n            winner = elements[2].choice;\n            winningElementsIDs.push(elements[2].id, elements[4].id, elements[6].id);\n        } else if (chosenCounter.length === 9 && winner === \"\"){\n            winner = \"draw\";\n        }\n\n        if (winner !== \"\") {\n            return { winner, winningElementsIDs };\n        } else {\n            return \"\";\n        }\n    }\n\n    clearGame = () => {\n        if (this.props.end !== true || this.state.winner === \"\") {\n            return;\n        }\n        this.setState({\n            winner: \"\",\n            winningElementsIDs: [],\n\n            elements: [\n                {\n                    id: 0,\n                    choice: \"\",\n                    taken: false,\n                },\n                {\n                    id: 1,\n                    choice: \"\",\n                    taken: false,\n                },\n                {\n                    id: 2,\n                    choice: \"\",\n                    taken: false,\n                },\n                {\n                    id: 3,\n                    choice: \"\",\n                    taken: false,\n                },\n                {\n                    id: 4,\n                    choice: \"\",\n                    taken: false,\n                },\n                {\n                    id: 5,\n                    choice: \"\",\n                    taken: false,\n                },\n                {\n                    id: 6,\n                    choice: \"\",\n                    taken: false,\n                },\n                {\n                    id: 7,\n                    choice: \"\",\n                    taken: false,\n                },\n                {\n                    id: 8,\n                    choice: \"\",\n                    taken: false,\n                },\n            ]\n        })\n        this.props.clear();\n        this.whoStart();\n    }\n\n    render() {\n\n        const elements = this.state.elements.map(el => (\n            <BoardElement key={el.id} data={this.state.elements[el.id]} playerMove={this.playerMove} winningElementsIDs={this.state.winningElementsIDs} />\n        ))\n\n        return (\n            <section id=\"board\">\n                {elements}\n                <Turn turn={this.state.turn} playerName={this.props.playerName}/>\n            </section>\n        )\n    }\n\n    componentDidMount() {\n        this.whoStart();\n    }\n\n    componentDidUpdate() {\n        this.clearGame();\n        if (this.state.winner === \"\") {\n            const endGame = this.endGame();\n\n            if (endGame === \"\") {\n                if (this.state.turn === \"ai\") {\n                    const elements = this.aiMove().elements;\n                    const turn = this.aiMove().turn;\n                    setTimeout(() => {\n                        this.setState({\n                            elements,\n                            turn,\n                        })\n                    }, 600)\n                }\n            }\n\n            if (endGame !== \"\") {\n                this.props.getScore(endGame.winner);\n\n                this.setState({\n                    winner: endGame.winner,\n                    turn: \"\",\n                    winningElementsIDs: endGame.winningElementsIDs,\n                })\n            }\n        }\n\n    }\n\n}\n\nexport default Board;","import React from \"react\";\nimport \"./notification.css\";\n\nclass OpeningBoard extends React.Component {\n\n    state = {\n        playerName: \"\",\n    }\n\n    submitName = e => {\n        e.preventDefault();\n        this.props.getPlayerName(this.state.playerName);\n    }\n\n    handleInput = e => {\n        const playerName = e.target.value;\n        this.setState({\n            playerName,\n        })\n    }\n\n    render () {\n\n        const {playerName} = this.state;\n\n        return (\n            <div className=\"notification\">\n            <h1>Witaj w grze <i style={{ color: \"green\" }}>kÃ³Å‚ko i krzyÅ¼yk</i></h1>\n            <form noValidate onSubmit={this.submitName}>\n                <label htmlFor=\"playerName\">Podaj swoje imiÄ™</label>\n                <input type=\"text\" id=\"playerName\" placeholder=\"Twoje imiÄ™\" value={playerName} onChange={this.handleInput}/>\n                {playerName && <p>CzeÅ›Ä‡ {playerName.charAt(0).toUpperCase() + playerName.slice(1)}</p>}\n                <button>zacznij grÄ™</button>\n            </form>\n        </div>\n        )\n    }\n}\n\n\nexport default OpeningBoard;","import React from 'react';\nimport \"./notification.css\";\n\n\nconst EndBoard = props => {\n    const { winner, playerName, playerWin, aiWin } = props.data;\n\n    if (winner === \"player\") {\n        return (\n            <div className=\"notification\">\n                <h1 style={{ color: \"green\" }}>{playerName}, udaÅ‚o siÄ™!</h1>\n                <p>aktualne wyniki</p>\n                <p>{playerName}: {playerWin}</p>\n                <p>Komputer: {aiWin}</p>\n                <button onClick={props.clear}>graj dalej</button>\n            </div>\n        )\n    } else if (winner === \"ai\") {\n        return (\n            <div className=\"notification\">\n                <h1 style={{ color: \"red\" }}>Komputer wygraÅ‚ :(</h1>\n                <p>aktualne wyniki</p>\n                <p>{playerName}: {playerWin}</p>\n                <p>Komputer: {aiWin}</p>\n                <button onClick={props.clear}>graj dalej</button>\n            </div>\n        )\n    } else {\n        return (\n            <div className=\"notification\">\n                <h1>Remis</h1>\n                <p>aktualne wyniki</p>\n                <p>{playerName}: {playerWin}</p>\n                <p>Komputer: {aiWin}</p>\n                <button onClick={props.clear}>graj dalej</button>\n            </div>\n        )\n    }\n}\nexport default EndBoard;","import React, { Component } from 'react';\nimport './App.css';\nimport Score from './Score';\nimport Board from './Board';\nimport OpeningBoard from './OpeningBoard';\nimport EndBoard from './EndBoard';\n\nclass App extends Component {\n\n  state = {\n    playerWin: 0,\n    aiWin: 0,\n    playerName: \"\",\n    winner: \"\",\n    gameEnd: false,\n  }\n\n  getScore = (winner) => {\n    if (winner === \"player\") {\n      this.setState({\n        playerWin: this.state.playerWin + 1,\n      })\n      setTimeout(() => {\n        this.setState({\n          winner,\n        })\n      }, 1000);\n    } else if (winner === \"ai\") {\n      this.setState({\n        aiWin: this.state.aiWin + 1,\n      })\n      setTimeout(() => {\n        this.setState({\n          winner,\n        })\n      }, 1000);\n    } else {\n      setTimeout(() => {\n        this.setState({\n          winner,\n        })\n      }, 500);\n    }\n  }\n\n  getPlayerName = (playerName) => {\n    const name = playerName.charAt(0).toUpperCase() + playerName.slice(1);\n    this.setState({\n      playerName: name,\n    })\n  };\n\n  clearGame = () => {\n    if (this.state.gameEnd) {\n      this.setState({\n        winner: \"\",\n        gameEnd: !this.state.gameEnd,\n      })\n    } else {\n      this.setState({\n        gameEnd: !this.state.gameEnd,\n      })\n    }\n  }\n\n\n\n  render() {\n    return (\n      <div id=\"game\">\n        {this.state.playerName ? null : <OpeningBoard getPlayerName={this.getPlayerName} />}\n        <Score score={this.state} playerName={this.state.playerName} />\n        <Board getScore={this.getScore} end={this.state.gameEnd} clear={this.clearGame} playerName={this.state.playerName}/>\n        {this.state.winner ? <EndBoard data={this.state} clear={this.clearGame} /> : null}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './comps/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}